<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Syida Hiring Tracker</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <style>
    :root {
      --primary: #e50914;
      --primary-light: #ff4d4d;
      --dark: #141414;
      --dark-light: #222;
      --light: #f5f5f5;
      --accent: #00a8ff;
      --success: #4CAF50;
      --warning: #FFC107;
      --danger: #F44336;
    }

    * {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    body {
      font-family: 'Poppins', sans-serif;
      background-color: var(--dark);
      color: var(--light);
      line-height: 1.6;
    }

    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 20px;
    }

    /* Header */
    header {
      background: linear-gradient(to right, var(--dark), var(--primary));
      padding: 20px 0;
      box-shadow: 0 4px 12px rgba(0,0,0,0.3);
    }

    .header-content {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .logo {
      display: flex;
      align-items: center;
      gap: 10px;
      font-size: 1.8rem;
      font-weight: 700;
      color: white;
      text-decoration: none;
    }

    .logo i {
      color: var(--primary-light);
    }

    nav ul {
      display: flex;
      list-style: none;
      gap: 20px;
    }

    nav a {
      color: var(--light);
      text-decoration: none;
      font-weight: 500;
      padding: 8px 12px;
      border-radius: 4px;
      transition: all 0.3s;
    }

    nav a:hover, nav a.active {
      background-color: rgba(255,255,255,0.2);
    }

    /* Dashboard */
    .dashboard {
      margin-top: 30px;
    }

    .stats-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 20px;
      margin-bottom: 30px;
    }

    .stat-card {
      background: var(--dark-light);
      padding: 25px;
      border-radius: 10px;
      box-shadow: 0 4px 8px rgba(0,0,0,0.2);
      transition: transform 0.3s;
    }

    .stat-card:hover {
      transform: translateY(-5px);
    }

    .stat-card i {
      font-size: 2.5rem;
      color: var(--primary);
      margin-bottom: 15px;
    }

    .stat-card h3 {
      font-size: 2rem;
      margin-bottom: 5px;
    }

    /* Candidate Cards */
    .candidates-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
      gap: 20px;
      margin-top: 20px;
    }

    .candidate-card {
      background: var(--dark-light);
      border-radius: 10px;
      overflow: hidden;
      box-shadow: 0 4px 8px rgba(0,0,0,0.2);
      transition: all 0.3s;
    }

    .candidate-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 8px 16px rgba(0,0,0,0.3);
    }

    .card-header {
      padding: 20px;
      border-bottom: 1px solid rgba(255,255,255,0.1);
    }

    .card-header h3 {
      margin-bottom: 5px;
    }

    .card-header p {
      color: #aaa;
      font-size: 0.9rem;
    }

    .card-body {
      padding: 20px;
    }

    .card-meta {
      display: flex;
      justify-content: space-between;
      margin-bottom: 15px;
      font-size: 0.9rem;
    }

    .status {
      display: inline-block;
      padding: 4px 10px;
      border-radius: 20px;
      font-size: 0.8rem;
      font-weight: 500;
    }

    .status.hired {
      background-color: rgba(76, 175, 80, 0.2);
      color: var(--success);
    }

    .status.interviewed {
      background-color: rgba(33, 150, 243, 0.2);
      color: var(--accent);
    }

    .status.pending {
      background-color: rgba(255, 193, 7, 0.2);
      color: var(--warning);
    }

    .card-actions {
      display: flex;
      justify-content: space-between;
      padding: 15px 20px;
      border-top: 1px solid rgba(255,255,255,0.1);
    }

    .btn {
      padding: 8px 16px;
      border-radius: 4px;
      border: none;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.3s;
    }

    .btn-primary {
      background-color: var(--primary);
      color: white;
    }

    .btn-primary:hover {
      background-color: var(--primary-light);
    }

    .btn-secondary {
      background-color: transparent;
      color: var(--light);
      border: 1px solid rgba(255,255,255,0.3);
    }

    .btn-secondary:hover {
      background-color: rgba(255,255,255,0.1);
    }

    /* Modal */
    .modal {
      display: none;
      position: fixed;
      z-index: 1000;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0,0,0,0.7);
      overflow: auto;
    }

    .modal-content {
      background-color: var(--dark-light);
      margin: 10% auto;
      padding: 30px;
      border-radius: 10px;
      width: 90%;
      max-width: 500px;
      box-shadow: 0 5px 15px rgba(0,0,0,0.5);
      position: relative;
    }

    .close-modal {
      position: absolute;
      top: 15px;
      right: 20px;
      font-size: 24px;
      color: #aaa;
      cursor: pointer;
    }

    .close-modal:hover {
      color: var(--light);
    }

    .modal h2 {
      margin-bottom: 20px;
      color: var(--primary);
    }

    .form-group {
      margin-bottom: 20px;
    }

    .form-group label {
      display: block;
      margin-bottom: 8px;
      font-weight: 500;
    }

    .form-control {
      width: 100%;
      padding: 12px;
      border-radius: 4px;
      border: 1px solid #333;
      background-color: rgba(0,0,0,0.5);
      color: var(--light);
      font-family: 'Poppins', sans-serif;
    }

    .form-control:focus {
      outline: none;
      border-color: var(--primary);
      box-shadow: 0 0 0 2px rgba(229, 9, 20, 0.3);
    }

    textarea.form-control {
      min-height: 120px;
      resize: vertical;
    }

    .send-btn {
      width: 100%;
      padding: 12px;
      font-size: 1rem;
      font-weight: 600;
    }

    .form-actions {
      display: flex;
      justify-content: flex-end;
      gap: 10px;
      margin-top: 20px;
    }

    /* Responsive */
    @media (max-width: 768px) {
      .header-content {
        flex-direction: column;
        gap: 15px;
      }

      nav ul {
        flex-wrap: wrap;
        justify-content: center;
      }

      .modal-content {
        margin: 20% auto;
        padding: 20px;
      }
    }
  </style>
</head>
<body>
  <header>
    <div class="container header-content">
      <a href="#" class="logo">
        <i class="fas fa-paw"></i>
        <span>Syida Hiring</span>
      </a>
      <nav>
        <ul>
          <li><a href="#" class="active"><i class="fas fa-home"></i> Dashboard</a></li>
          <li><a href="#"><i class="fas fa-users"></i> Candidates</a></li>
          <li><a href="#" onclick="openAddCandidateModal()"><i class="fas fa-plus"></i> Add New</a></li>
        </ul>
      </nav>
    </div>
  </header>

  <main class="container">
    <div class="dashboard">
      <h1>Hiring Dashboard</h1>
      
      <div class="stats-grid">
        <div class="stat-card">
          <i class="fas fa-users"></i>
          <h3>24</h3>
          <p>Total Candidates</p>
        </div>
        <div class="stat-card">
          <i class="fas fa-calendar-check"></i>
          <h3>5</h3>
          <p>Upcoming Interviews</p>
        </div>
        <div class="stat-card">
          <i class="fas fa-thumbs-up"></i>
          <h3>12</h3>
          <p>Hired Candidates</p>
        </div>
      </div>

      <h2>Recent Candidates</h2>
      <div class="candidates-grid" id="candidatesContainer">
        <!-- Candidate cards will be added dynamically -->
      </div>
    </div>
  </main>

  <!-- Message Modal -->
  <div id="messageModal" class="modal">
    <div class="modal-content">
      <span class="close-modal" onclick="closeModal('messageModal')">&times;</span>
      <h2><i class="fas fa-comment-dots"></i> Send WhatsApp Message</h2>

      <input type="text" id="recipient" hidden>
      
      <div class="form-group">
        <label for="messageTemplate">Template</label>
        <select id="messageTemplate" class="form-control">
          <option value="">-- Select Template --</option>
          <option value="first_day_reminder">First Day Reminder</option>
          <option value="no_show_followup">No Show Follow-up</option>
          <option value="reschedule_request">Reschedule Request</option>
        </select>
      </div>

      <div class="form-group">
        <label for="messageContent">Message</label>
        <textarea id="messageContent" class="form-control" rows="6" placeholder="Message will appear here..."></textarea>
      </div>

      <div class="form-group">
        <label for="phoneNumber">Phone Number</label>
        <input type="text" id="phoneNumber" class="form-control" placeholder="e.g. 60123456789">
      </div>

      <button id="sendWhatsApp" class="btn btn-primary send-btn">
        <i class="fab fa-whatsapp"></i> Send via WhatsApp
      </button>
    </div>
  </div>

  <!-- Add Candidate Modal -->
  <div id="addCandidateModal" class="modal">
    <div class="modal-content">
      <span class="close-modal" onclick="closeModal('addCandidateModal')">&times;</span>
      <h2><i class="fas fa-user-plus"></i> Add New Candidate</h2>
      
      <form id="candidateForm">
        <div class="form-group">
          <label for="candidateName">Full Name</label>
          <input type="text" id="candidateName" class="form-control" required>
        </div>
        
        <div class="form-group">
          <label for="candidatePosition">Position</label>
          <input type="text" id="candidatePosition" class="form-control" required>
        </div>
        
        <div class="form-group">
          <label for="candidateLocation">Location</label>
          <select id="candidateLocation" class="form-control" required>
            <option value="">-- Select Location --</option>
            <option value="KL Branch">KL Branch</option>
            <option value="PJ Branch">PJ Branch</option>
            <option value="Cyberjaya">Cyberjaya</option>
          </select>
        </div>
        
        <div class="form-group">
          <label for="candidatePhone">Phone Number</label>
          <input type="tel" id="candidatePhone" class="form-control" required>
        </div>
        
        <div class="form-group">
          <label for="candidateStatus">Status</label>
          <select id="candidateStatus" class="form-control" required>
            <option value="">-- Select Status --</option>
            <option value="pending">Pending</option>
            <option value="interviewed">Interviewed</option>
            <option value="hired">Hired</option>
          </select>
        </div>
        
        <div class="form-actions">
          <button type="button" class="btn btn-secondary" onclick="closeModal('addCandidateModal')">
            Cancel
          </button>
          <button type="submit" class="btn btn-primary">
            <i class="fas fa-save"></i> Save Candidate
          </button>
        </div>
      </form>
    </div>
  </div>

  <script>
    // Sample candidate data
    const candidates = [
      {
        id: 1,
        name: "Ali bin Ahmad",
        position: "Sales Executive",
        location: "KL Branch",
        date: "15 Jun 2023",
        status: "hired",
        phone: "60123456789"
      },
      {
        id: 2,
        name: "Siti Nurhaliza",
        position: "Marketing Manager",
        location: "PJ Branch",
        date: "18 Jun 2023",
        status: "interviewed",
        phone: "60112233445"
      },
      {
        id: 3,
        name: "Raj Kumar",
        position: "IT Specialist",
        location: "Cyberjaya",
        date: "20 Jun 2023",
        status: "pending",
        phone: "60113344556"
      }
    ];

    // Templates
    const templates = {
      first_day_reminder: `Hi {name}, this is a friendly reminder that your first working day is tomorrow. Please arrive by 9:30 AM at your assigned location. Bring your IC and dress professionally. Good luck!`,
      no_show_followup: `Hi {name}, we noticed you didn't show up today. Is everything alright? Please update us if you wish to continue your job placement.`,
      reschedule_request: `Hi {name}, we understand you may need to reschedule. Let us know your availability so we can make new arrangements. Thank you!`
    };

    // DOM elements
    const candidatesContainer = document.getElementById("candidatesContainer");
    const messageModal = document.getElementById("messageModal");
    const addCandidateModal = document.getElementById("addCandidateModal");
    const templateSelector = document.getElementById("messageTemplate");
    const messageBox = document.getElementById("messageContent");
    const phoneInput = document.getElementById("phoneNumber");
    const recipientInput = document.getElementById("recipient");
    const candidateForm = document.getElementById("candidateForm");

    // Initialize the page
    document.addEventListener("DOMContentLoaded", function() {
      renderCandidates();
      
      // Handle template change
      templateSelector.addEventListener("change", () => {
        const selected = templateSelector.value;
        const name = recipientInput.value || "there";
        if (templates[selected]) {
          const message = templates[selected].replace("{name}", name);
          messageBox.value = message;
        } else {
          messageBox.value = "";
        }
      });

      // WhatsApp send
      document.getElementById("sendWhatsApp").addEventListener("click", () => {
        const phone = phoneInput.value.trim();
        const message = messageBox.value.trim();
        
        if (!phone) {
          alert("Please enter a phone number.");
          return;
        }
        
        if (!message) {
          alert("Please enter a message or select a template.");
          return;
        }

        const encodedMsg = encodeURIComponent(message);
        const whatsappURL = `https://wa.me/${phone}?text=${encodedMsg}`;
        window.open(whatsappURL, "_blank");
      });

      // Handle form submission
      candidateForm.addEventListener("submit", function(e) {
        e.preventDefault();
        
        const newCandidate = {
          id: candidates.length + 1,
          name: document.getElementById("candidateName").value,
          position: document.getElementById("candidatePosition").value,
          location: document.getElementById("candidateLocation").value,
          date: new Date().toLocaleDateString("en-GB", { day: "numeric", month: "short", year: "numeric" }),
          status: document.getElementById("candidateStatus").value,
          phone: document.getElementById("candidatePhone").value
        };
        
        candidates.push(newCandidate);
        renderCandidates();
        closeModal("addCandidateModal");
        candidateForm.reset();
        alert("Candidate added successfully!");
      });
    });

    // Render candidate cards
    function renderCandidates() {
      candidatesContainer.innerHTML = "";
      
      candidates.forEach(candidate => {
        const statusClass = getStatusClass(candidate.status);
        const statusText = getStatusText(candidate.status);
        
        const card = document.createElement("div");
        card.className = "candidate-card";
        card.innerHTML = `
          <div class="card-header">
            <h3>${candidate.name}</h3>
            <p>${candidate.position}</p>
          </div>
          <div class="card-body">
            <div class="card-meta">
              <span><i class="fas fa-building"></i> ${candidate.location}</span>
              <span><i class="fas fa-calendar-alt"></i> ${candidate.date}</span>
            </div>
            <span class="status ${statusClass}">${statusText}</span>
          </div>
          <div class="card-actions">
            <button class="btn btn-primary" onclick="openMessageModal('${candidate.name}', '${candidate.phone}')">
              <i class="fas fa-comment"></i> Message
            </button>
            <button class="btn btn-secondary">
              <i class="fas fa-eye"></i> View
            </button>
          </div>
        `;
        
        candidatesContainer.appendChild(card);
      });
    }

    // Helper functions for status
    function getStatusClass(status) {
      switch(status) {
        case "hired": return "hired";
        case "interviewed": return "interviewed";
        default: return "pending";
      }
    }

    function getStatusText(status) {
      switch(status) {
        case "hired": return "Hired";
        case "interviewed": return "Interviewed";
        default: return "Pending";
      }
    }

    // Modal functions
    function openMessageModal(name, phone) {
      recipientInput.value = name || "";
      phoneInput.value = phone || "";
      templateSelector.value = "";
      messageBox.value = "";
      messageModal.style.display = "block";
    }

    function openAddCandidateModal() {
      addCandidateModal.style.display = "block";
    }

    function closeModal(modalId) {
      document.getElementById(modalId).style.display = "none";
    }

    // Close modal if clicked outside
    window.onclick = function(event) {
      if (event.target.classList.contains("modal")) {
        event.target.style.display = "none";
      }
    }
  </script>
</body>
</html>
